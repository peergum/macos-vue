TAP version 14
# Subtest: this is a child test
    ok 1 - this passes
    not ok 2 - this fails
      ---
      at:
        fileName: test/test1.js
        lineNumber: 9
        columnNumber: 7
        typeName: Test
      stack: |
        Test.<anonymous> (test/test1.js:9:7)
        test/test1.js:7:3
      source: |
        t.test('this is a child test', t => {
            t.pass('this passes')
            t.fail('this fails')
        ------^
            t.ok(myThing, 'this passes if truthy')
            t.equal(myThing, 5, 'this passes if the values are equal')
      ...
    
    not ok 3 - myThing is not defined
      ---
      stack: |
        Test.<anonymous> (test/test1.js:10:10)
      at:
        fileName: test/test1.js
        lineNumber: 10
        columnNumber: 10
        typeName: Test
        methodName: <anonymous>
        functionName: Test.<anonymous>
      type: ReferenceError
      tapCaught: testFunctionThrow
      source: |2
            t.pass('this passes')
            t.fail('this fails')
            t.ok(myThing, 'this passes if truthy')
        ---------^
            t.equal(myThing, 5, 'this passes if the values are equal')
            t.match( myThing, {
      ...
    
    1..3
not ok 1 - this is a child test # time=12.262ms
  ---
  at:
    fileName: test/test1.js
    lineNumber: 7
    columnNumber: 3
    isToplevel: true
  source: |
    // import { myThing } from '../src/whatever.js'
  
    t.test('this is a child test', t => {
    --^
        t.pass('this passes')
        t.fail('this fails')
  ...

# Subtest: async tests work like you would expect
    ok 1 - OK
    1..1
ok 2 - async tests work like you would expect # time=0.234ms

1..2
